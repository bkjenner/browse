const officeclientele = db.define(
    "officeclientele",
    {
        id: {
            type: Sequelize.INTEGER,
            primaryKey: true,
            autoIncrement: true,
        },
        accountingservices: { type: Sequelize.INTEGER },
        accountingservicesclients: { type: Sequelize.INTEGER },
        accountingserviceshours: { type: Sequelize.DECIMAL(28, 2) },
        businessvaluations: { type: Sequelize.INTEGER },
        businessvaluationsclients: { type: Sequelize.INTEGER },
        businessvaluationshours: { type: Sequelize.DECIMAL(28, 2) },
        clienttotal: { type: Sequelize.INTEGER },
        compilation: { type: Sequelize.INTEGER },
        compilationclients: { type: Sequelize.INTEGER },
        compilationhours: { type: Sequelize.DECIMAL(28, 2) },
        cpab: { type: Sequelize.BOOLEAN },
        reviewentitiesunderifrsclients: { type: Sequelize.INTEGER },
        reviewentitiesunderifrshours: { type: Sequelize.DECIMAL(28, 2) },
        forensic: { type: Sequelize.INTEGER },
        forensicclients: { type: Sequelize.INTEGER },
        forensichours: { type: Sequelize.DECIMAL(28, 2) },
        hourtotal: { type: Sequelize.DECIMAL(28, 2) },
        insolvency: { type: Sequelize.INTEGER },
        insolvencyclients: { type: Sequelize.INTEGER },
        insolvencyhours: { type: Sequelize.DECIMAL(28, 2) },
        lastupdated: { type: Sequelize.DATE },
        notforprofit: { type: Sequelize.INTEGER },
        notforprofitclients: { type: Sequelize.INTEGER },
        notforprofithours: { type: Sequelize.DECIMAL(28, 2) },
        numberofpartners: { type: Sequelize.INTEGER },
        offeringdocuments: { type: Sequelize.INTEGER },
        offeringdocumentsclients: { type: Sequelize.INTEGER },
        offeringdocumentshours: { type: Sequelize.DECIMAL(28, 2) },
        officeid: { type: Sequelize.INTEGER },
        otheraudit: { type: Sequelize.INTEGER },
        otherauditclients: { type: Sequelize.INTEGER },
        otheraudithours: { type: Sequelize.DECIMAL(28, 2) },
        otherservices: { type: Sequelize.INTEGER },
        otherservicesclients: { type: Sequelize.INTEGER },
        otherserviceshours: { type: Sequelize.DECIMAL(28, 2) },
        pcaob: { type: Sequelize.BOOLEAN },
        publiccompanies: { type: Sequelize.INTEGER },
        publiccompaniesclients: { type: Sequelize.INTEGER },
        publiccompanieshours: { type: Sequelize.DECIMAL(28, 2) },
        publicsector: { type: Sequelize.INTEGER },
        publicsectorclients: { type: Sequelize.INTEGER },
        publicsectorhours: { type: Sequelize.DECIMAL(28, 2) },
        recordstatus: { type: Sequelize.CHAR(1) },
        refyearstatusid: { type: Sequelize.INTEGER },
        reviewinterim: { type: Sequelize.INTEGER },
        reviewinterimclients: { type: Sequelize.INTEGER },
        reviewinterimhours: { type: Sequelize.DECIMAL(28, 2) },
        reviewyearend: { type: Sequelize.INTEGER },
        reviewyearendclients: { type: Sequelize.INTEGER },
        reviewyearendhours: { type: Sequelize.DECIMAL(28, 2) },
        taxservices: { type: Sequelize.INTEGER },
        taxservicesclients: { type: Sequelize.INTEGER },
        taxserviceshours: { type: Sequelize.DECIMAL(28, 2) },
        trustaccounting: { type: Sequelize.INTEGER },
        trustaccountingclients: { type: Sequelize.INTEGER },
        trustaccountinghours: { type: Sequelize.DECIMAL(28, 2) },
        updatecount: { type: Sequelize.INTEGER },
        year: { type: Sequelize.INTEGER },
        auditentitiesunderifrsclients: { type: Sequelize.INTEGER },
        auditentitiesunderifrshours: { type: Sequelize.DECIMAL(28, 2) },
        hasdeclaredonmainoffice: { type: Sequelize.BOOLEAN },
        otherhandlingoftrustfundhours: { type: Sequelize.DECIMAL(28, 2) },
        otherhandlingoftrustfundclients: { type: Sequelize.INTEGER },
        otherhandlingoftrustfund: { type: Sequelize.INTEGER },
        reviewentitiesunderifrs: { type: Sequelize.INTEGER },
        auditentitiesunderifrs: { type: Sequelize.INTEGER },
        recordstatus: {
            type: Sequelize.STRING,
            defaultValue: "A",
        },
    },
    {
        timestamps: false,
        freezeTableName: true,
        hasTrigger: true,
    },
);

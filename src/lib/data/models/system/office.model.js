const office = db.define(
    "office",
    {
        id: {
            type: Sequelize.INTEGER,
            primaryKey: true,
            autoIncrement: true,
        },
        abdesignatedpartnerclientid: { type: Sequelize.INTEGER },
        abmainofficeindicator: { type: Sequelize.BOOLEAN },
        albertalocationindicator: { type: Sequelize.BOOLEAN },
        applicationreason: { type: Sequelize.STRING(256) },
        ato: { type: Sequelize.BOOLEAN },
        atostatusdate: { type: Sequelize.DATE },
        billablecountsupdated: { type: Sequelize.DATE },
        billtoid: { type: Sequelize.INTEGER },
        breadthassurance: { type: Sequelize.BOOLEAN },
        breadthfinance: { type: Sequelize.BOOLEAN },
        breadthfinancialplanning: { type: Sequelize.BOOLEAN },
        breadthgovernance: { type: Sequelize.BOOLEAN },
        breadthmanagement: { type: Sequelize.BOOLEAN },
        breadthperformance: { type: Sequelize.BOOLEAN },
        breadthtaxation: { type: Sequelize.BOOLEAN },
        cafull: { type: Sequelize.INTEGER },
        capart: { type: Sequelize.INTEGER },
        cicano: { type: Sequelize.STRING(8) },
        clientid: { type: Sequelize.INTEGER },
        cmafull: { type: Sequelize.INTEGER },
        cmapart: { type: Sequelize.INTEGER },
        cmastudentfull: { type: Sequelize.INTEGER },
        cmastudentpart: { type: Sequelize.INTEGER },
        comments: { type: Sequelize.TEXT },
        contactfordesciplineclientid: { type: Sequelize.INTEGER },
        contactforpracticereviewclientid: { type: Sequelize.INTEGER },
        contactforpracticereviewemail: { type: Sequelize.STRING(75) },
        cycleduration: { type: Sequelize.INTEGER },
        depthassurance: { type: Sequelize.BOOLEAN },
        depthfinance: { type: Sequelize.BOOLEAN },
        depthfinancialplanning: { type: Sequelize.BOOLEAN },
        depthgovernance: { type: Sequelize.BOOLEAN },
        depthmanagement: { type: Sequelize.BOOLEAN },
        depthperformance: { type: Sequelize.BOOLEAN },
        depthtaxation: { type: Sequelize.BOOLEAN },
        establisheddate: { type: Sequelize.DATE },
        filemaintenanceid: { type: Sequelize.INTEGER },
        firmyearend: { type: Sequelize.INTEGER },
        govtregisteredllpname: { type: Sequelize.STRING(100) },
        hascoreassurance: { type: Sequelize.BOOLEAN },
        hascorefinance: { type: Sequelize.BOOLEAN },
        hascorefinancialplanning: { type: Sequelize.BOOLEAN },
        hascoregovernance: { type: Sequelize.BOOLEAN },
        hascoremanagement: { type: Sequelize.BOOLEAN },
        hascoretaxation: { type: Sequelize.BOOLEAN },
        headofficeclientid: { type: Sequelize.INTEGER },
        headofficeindicator: { type: Sequelize.BOOLEAN },
        hitcount: { type: Sequelize.INTEGER },
        hodesignatedpartnerclientid: { type: Sequelize.INTEGER },
        initialatodate: { type: Sequelize.DATE },
        lawyerfull: { type: Sequelize.INTEGER },
        lawyerpart: { type: Sequelize.INTEGER },
        llpinitialpermitdate: { type: Sequelize.DATE },
        llpmainofficeclientid: { type: Sequelize.INTEGER },
        llppartnerclientid: { type: Sequelize.INTEGER },
        llppartnerno: { type: Sequelize.INTEGER },
        mainofficeclientid: { type: Sequelize.INTEGER },
        mainsatellitellpindicator: { type: Sequelize.BOOLEAN },
        mbafull: { type: Sequelize.INTEGER },
        mbapart: { type: Sequelize.INTEGER },
        nameeffectivedate: { type: Sequelize.DATE },
        nextprdate: { type: Sequelize.DATE },
        notes: { type: Sequelize.TEXT },
        otherfull: { type: Sequelize.INTEGER },
        otherpart: { type: Sequelize.INTEGER },
        pafwebcountssetdate: { type: Sequelize.DATE },
        pliinsurer: { type: Sequelize.STRING(40) },
        plipolicynumber: { type: Sequelize.STRING(30) },
        plistatusdate: { type: Sequelize.DATE },
        positionsapproved: { type: Sequelize.INTEGER },
        practicerestrictiondate: { type: Sequelize.DATE },
        prexempt: { type: Sequelize.BOOLEAN },
        primarycontactclientid: { type: Sequelize.INTEGER },
        printato: { type: Sequelize.BOOLEAN },
        prsexported: { type: Sequelize.BOOLEAN },
        prsrequiresexport: { type: Sequelize.BOOLEAN },
        recentdeclarationdate: { type: Sequelize.DATE },
        recordstatus: { type: Sequelize.CHAR(1) },
        recruitingcontactaclientid: { type: Sequelize.INTEGER },
        recruitingcontactbclientid: { type: Sequelize.INTEGER },
        refatostatusid: { type: Sequelize.INTEGER },
        refatosubstatusid: { type: Sequelize.INTEGER },
        refcatotypeid: { type: Sequelize.INTEGER },
        refdeclarationstatusid: { type: Sequelize.INTEGER },
        refemployersubtypeid: { type: Sequelize.INTEGER },
        refestablishedexplid: { type: Sequelize.INTEGER },
        refllpstatusid: { type: Sequelize.INTEGER },
        refllptypeid: { type: Sequelize.INTEGER },
        refmailingmethodpreferenceid: { type: Sequelize.BOOLEAN },
        refoperatingstyleid: { type: Sequelize.INTEGER },
        refpermanencytypeid: { type: Sequelize.INTEGER },
        refpliotherid: { type: Sequelize.INTEGER },
        refplistatusid: { type: Sequelize.INTEGER },
        refpprppathid: { type: Sequelize.INTEGER },
        refpracticelocaleid: { type: Sequelize.INTEGER },
        refpracticetypeid: { type: Sequelize.INTEGER },
        refrestrictionid: { type: Sequelize.INTEGER },
        refsectorid: { type: Sequelize.INTEGER },
        refsraauditorid: { type: Sequelize.INTEGER },
        refsrastatusid: { type: Sequelize.INTEGER },
        refstatusid: { type: Sequelize.INTEGER },
        refsubsectorid: { type: Sequelize.INTEGER },
        refsubstatusid: { type: Sequelize.INTEGER },
        refsubstatusreasonid: { type: Sequelize.INTEGER },
        registrationdate: { type: Sequelize.DATE },
        restrictionseffectivedate: { type: Sequelize.DATE },
        sraauditor: { type: Sequelize.INTEGER },
        sraeffectivedate: { type: Sequelize.DATE },
        srastatusdate: { type: Sequelize.DATE },
        studentcontactclientid: { type: Sequelize.INTEGER },
        substatusdate: { type: Sequelize.DATE },
        tieredaccounting: { type: Sequelize.BOOLEAN },
        tieredaccountingdate: { type: Sequelize.DATE },
        tieredaudit: { type: Sequelize.BOOLEAN },
        tieredauditdate: { type: Sequelize.DATE },
        tieredbusiness: { type: Sequelize.BOOLEAN },
        tieredbusinessdate: { type: Sequelize.DATE },
        tieredcompilation: { type: Sequelize.BOOLEAN },
        tieredcompilationdate: { type: Sequelize.DATE },
        tieredforensic: { type: Sequelize.BOOLEAN },
        tieredforensicdate: { type: Sequelize.DATE },
        tieredinsolvency: { type: Sequelize.BOOLEAN },
        tieredinsolvencydate: { type: Sequelize.DATE },
        tieredother: { type: Sequelize.BOOLEAN },
        tieredotherdate: { type: Sequelize.DATE },
        tieredreview: { type: Sequelize.BOOLEAN },
        tieredreviewdate: { type: Sequelize.DATE },
        tieredtaxation: { type: Sequelize.BOOLEAN },
        tieredtaxationdate: { type: Sequelize.DATE },
        trainingprincipalclientid: { type: Sequelize.INTEGER },
        updatecount: { type: Sequelize.INTEGER },
        refdescriptivestyleid: { type: Sequelize.INTEGER(4) },
        registeredname: { type: Sequelize.STRING(500) },
        otherdescriptivestyle: { type: Sequelize.STRING(500) },
        technicianfull: { type: Sequelize.INTEGER },
        technicianpart: { type: Sequelize.INTEGER },
        cpafull: { type: Sequelize.INTEGER },
        cpapart: { type: Sequelize.INTEGER },
        hodesignatedpartnerpreferredemail: { type: Sequelize.STRING(75) },
        recordstatus: {
            type: Sequelize.STRING,
            defaultValue: "A",
        },
    },
    {
        timestamps: false,
        freezeTableName: true,
        hasTrigger: true,
    },
);

office.associate = function (db) {
    db.models.office.belongsTo(db.models.client, {
        foreignKey: "hodesignatedpartnerclientid",
        constraints: false,
        unique: false,
        as: "hopartnerclient",
    });
    db.models.office.belongsTo(db.models.client, {
        foreignKey: "abdesignatedpartnerclientid",
        constraints: false,
        unique: false,
        as: "abpartnerclient",
    });
    db.models.office.belongsTo(db.models.client, {
        foreignKey: "contactfordesciplineclientid",
        constraints: false,
        unique: false,
        as: "disciplinecontact",
    });
    db.models.office.belongsTo(db.models.client, {
        foreignKey: "contactforpracticereviewclientid",
        constraints: false,
        unique: false,
        as: "reviewcontact",
    });
    db.models.office.belongsTo(db.models.referencefields, {
        foreignKey: "refsectorid",
        constraints: false,
        unique: false,
        as: "refsector",
    });
    db.models.office.belongsTo(db.models.refsubsector, {
        foreignKey: "refsubsectorid",
        constraints: false,
        unique: false,
        as: "refsubsector",
    });
    db.models.office.belongsTo(db.models.client, {
        foreignKey: "clientid",
        constraints: false,
        unique: false,
        as: "officeclient",
    });
    db.models.office.belongsTo(db.models.practicereview, {
        foreignKey: "clientid",
        targetKey: "clientid",
        constraints: false,
        unique: false,
        as: "officepracticereview",
    });
};

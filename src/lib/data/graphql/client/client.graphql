"Main data collection for system entities"
type Client {
    id: Int
    "Activation status for this user"
    activated: Boolean
    activationcode: String
    addeddate: String
    clientidparent: Int
    clientidupdatedby: Int
    clientname: String
    clientnumber: Int
    consentdate: String
    contactbirthdate: String
    createdonline: Boolean
    designation: String
    firstname: String
    historyofdiscipline: Boolean
    mailname: String
    middlename: String
    notes: String
    oldclientnumber: Int
    paidthroughdate: String
    password: String
    pdnotes: String
    pdnotesupdated: String
    pdnotesupdatedbyemployeeid: Int
    providerid: Int
    publickey: String
    quickcode: String
    recordstatus: String
    refclienttypeid: ReferenceField
    refconsenttypeid: ReferenceField
    refethnicityid: ReferenceField
    refgenderid: ReferenceField
    refownedbydepartmentid: ReferenceField
    refpreferredbillingaddresstypeid: ReferenceField
    refpreferredemailaddresstypeid: ReferenceField
    refpreferredmailingaddresstypeid: ReferenceField
    refpreferredphoneaddresstypeid: ReferenceField
    refpreferredshippingaddresstypeid: ReferenceField
    refstatusid: ReferenceField
    reftitleid: ReferenceField
    seeprofstandards: Boolean
    sortname: String
    statuseffectivedate: String
    surname: String
    underinvestigation: Boolean
    updatecount: Int
    url: String
    username: String

    address: ClientAddress
    member: Member
    addresses: [ClientAddress]
    clientmemberemployment: [MemberEmployment]
}

input ClientFilter {
    clientnumber: Int
    firstname: String
    refclienttypeid: Int
    refgenderid: Int
    surname: String
}

type Query {
    clients(clientname: String, activated: Boolean, employed: Boolean): [Client]
    client(clientnumber: Int): Client
}

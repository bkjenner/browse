const typeDefs = `#graphql
    "Main data collection for users"
    type Client {
        id: Int,
        addeddate: String
        "Staff who last updated this client"
        clientidupdatedby: Int,
        clientname: String,
        clientnumber: Int,
        consentdate: String,
        contactbirthdate: String,
        createdonline: Boolean,
        designation: String,
        firstname: String,
        historyofdiscipline: Boolean,
        mailname: String,
        middlename: String,
        notes: String,
        oldclientnumber: Int,
        password: String,
        pdnotes: String,
        pdnotesupdated: String,
        pdnotesupdatedbyemployeeid: Int,
        quickcode: String,
        refclienttypeid: Int,
        refconsenttypeid: Int,
        refgenderid: Int,
        refownedbydepartmentid: Int,
        refpreferredbillingaddresstypeid: Int,
        refpreferredemailaddresstypeid: Int,
        refpreferredmailingaddresstypeid: Int,
        refpreferredphoneaddresstypeid: Int,
        refpreferredshippingaddresstypeid: Int,
        refstatusid: Int,
        reftitleid: Int,
        seeprofstandards: Boolean,
        sortname: String,
        statuseffectivedate: String,
        surname: String,
        underinvestigation: Boolean,
        updatecount: Int,
        url: String,
        username: String,
        activated: Boolean,
        activationcode: String,
        clientidparent: Int,
        paidthroughdate: String,
        providerid: Int,
        publickey: String,
        refethnicityid: Int,
        recordstatus: String,


        address: Address,
        member: Member,
        addresses: [Address]
    }

    type Member {
        id: ID!,
        albertamembmeansdate: String,
        assurancehours: Float,
        birthdate: String,
        breadthassurance: Boolean,
        breadthfinance: Boolean,
        breadthgovernance: Boolean,
        breadthmanagement: Boolean,
        breadthperformance: Boolean,
        breadthtaxation: Boolean,
        cicachangedate: String,
        cicano: String,
        clientid: Int,
        compilationhours: Int,
        cpdcourseprovider: Int,
        cpdcoursetaken: Boolean,
        cpdcoursetakendate: String,
        cpereportexcemption: Boolean,
        currentregdate: String,
        depthassurance: Boolean,
        depthfinance: Boolean,
        depthgovernance: Boolean,
        depthmanagement: Boolean,
        depthperformance: Boolean,
        depthtaxation: Boolean,
        designation: String,
        experiencetotalmonths: Int,
        experienceverificationmonths: Int,
        finalmarksdate: String,
        firstmembcountrydate: String,
        firstmembprovincedate: String,
        gmatdate: String,
        gmatscore: Int,
        hascorefinancialreporting: Boolean,
        hascoremanagementaccounting: Boolean,
        hascorereportingandaccounting: Boolean,
        iaeligible: Boolean,
        icaafcaapproveddate: String,
        initialregdate: String,
        iscpausbilling: Boolean,
        isenablingcompetenciesmet: Boolean,
        isusedesignation: Boolean,
        knownas: String,
        mailname: String,
        nameofpreapprovedprogram: String,
        otherhours: Int,
        preapprovedprogrammonths: Int,
        previousname: String,
        primeprovincechangedate: String,
        recordstatus: String,
        refalbertamembmeansid: Int,
        refbillingprovinceid: Int,
        refcanadamembmeansid: Int,
        refclientstatusid: Int,
        refclientsubstatusid: Int,
        refcurrentregulationcode: Int,
        refemploymentexpid: Int,
        reffirstmembcountryid: Int,
        reffirstmembprovinceid: Int,
        refgenderid: Int,
        refgmatpurposecode: Int,
        refnodegreereasoncodeid: Int,
        refsubstatusreasonid: Int,
        reftitleid: Int,
        regdate: String,
        registeredname: String,
        reportedaudithours: Float,
        reviewhours: Float,
        spousesname: String,
        substatusreasoneffectivedate: String,
        taxhours: Float,
        tieredaccounting: Boolean,
        tieredaccountingdate: String,
        tieredaudit: Boolean,
        tieredauditdate: String,
        tieredbusiness: Boolean,
        tieredbusinessdate: String,
        tieredcompilation: Boolean,
        tieredcompilationdate: String,
        tieredforensic: Boolean,
        tieredforensicdate: String,
        tieredinsolvency: Boolean,
        tieredinsolvencydate: String,
        tieredother: Boolean,
        tieredotherdate: String,
        tieredreview: Boolean,
        tieredreviewdate: String,
        tieredtaxation: Boolean,
        tieredtaxationdate: String,
        totalchargablehours: Float,
        ufeeligible: Boolean,
        updatecount: Int,
        ispprpmentor: Boolean,
        finalexammarksyear: Int,
        hascfebreadthfinance: Boolean,
        hascfedepthfinancialreporting: Boolean,
        hascfedepthauditassurance: Boolean,
    }

    type Address {
        id: ID!,
        clientid: Int,
        refaddresstypeid: ReferenceField,
        address1: String,
        address2: String,
        refcityid: Int,
        refprovinceid: Int,
        refcountryid: Int
    }

    type ReferenceField {
        id: ID!,
        type: String,
        description: String,
        sequence: Int,
        recordstatus: String,
        candelete: Boolean,
        shortcode: String,
        updatecount: Int,
        keycode: Int
    }

    type Query {
        clients(clientname: String, activated: Boolean): [Client],
        client(clientnumber: Int): Client,
        members(refclientstatusid: Int, limit: Int): [Member],
        referencefield(id: ID!): ReferenceField
    }
`;

module.exports = typeDefs;
